AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
# Globals:
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:  
  Function1:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/function1.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /f1
            Method: get
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - Function1
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function1
      Principal: apigateway.amazonaws.com
  Function2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/function2.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /f2
            Method: get
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - Function2
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function2
      Principal: apigateway.amazonaws.com
  Function3:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/function3.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /f3
            Method: get
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - Function3
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function3
      Principal: apigateway.amazonaws.com
  Function4:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/function4.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /f4
            Method: get
  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - Function4
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function4
      Principal: apigateway.amazonaws.com
  Function5:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/function5.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]